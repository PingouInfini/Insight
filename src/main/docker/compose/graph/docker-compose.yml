version: '3'
services:
  janusgraph:
    image: janusgraph:0.2.2-hadoop2
    build:
      dockerfile: Dockerfile
      args:
        version: 0.2.2
        hadoop: hadoop2
      context: ./
    container_name: janusgraph
    command: ["./bin/gremlin.sh"]
    ports:
      - "8182:8182"
    #volumes:
      #- ./conf/gremlin-server-rest-modern.yaml:/app/janusgraph-0.2.2-hadoop2/conf/gremlin-server-rest-modern.yaml
    #command: ["./bin/gremlin-server.sh", "./conf/gremlin-server/gremlin-server-configuration.yaml" ]
    depends_on:
      - elasticsearch
      - cassandra

  elasticsearch:
    #container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.0
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "http.host=0.0.0.0"
      - "transport.host=127.0.0.1"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 1s
      timeout: 30s
      retries: 30
    ports:
      - "9200:9200"
    volumes:
      - ./es/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml

  cassandra:
    container_name: cassandra
    image: cassandra:latest
    #command: /bin /bash -c "sleep 1 && echo ' -- Pausing to let system catch up ... -->' && /docker-entrypoint.sh cassandra -f"
    #command: bash -c 'if [ -z "$$(ls -A /var/lib/cassandra/)" ] ; then sleep 0; fi && /docker-entrypoint.sh cassandra -f'
    ports:
      - "7000:7000"
      - "9042:9042"
    expose:
      - 7000
      - 7001
      - 7199
      - 9042
      - 9160
    # volumes: # uncomment if you desire mounts, also uncomment cluster.sh
    #   - ./data/cassandra-1:/var/lib/cassandra:rw
