apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: insight-nifi
  namespace: insight
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: insight-nifi
    spec:
      initContainers:
        - name: config
          image: busybox
          command:
            - "sh"
          args:
            - "-c"
            - |
              set -e
              set -x
              cp /opt/nifi/nifi-current/conf-temp/bootstrap.conf /opt/nifi/nifi-current/conf/bootstrap.conf
          volumeMounts:
            - name: storage-bootstrap
              mountPath: /opt/nifi/nifi-current/conf-temp/
            - name: storage-conf
              mountPath: /opt/nifi/nifi-current/conf/
      containers:
      - name: nifi 
        image: apache/nifi:latest
        ports:
        - containerPort: 8080
          name: front
          protocol: TCP 
        - containerPort: 10514
          name: listener
          protocol: UDP 
        resources:
          requests:
            memory: "10240Mi"
            cpu: "1"
          limits:
            memory: "10240Mi"
            cpu: "1"
        volumeMounts:
        - name: storage
          mountPath: /opt/nifi/nifi-current/conf/templates/
        - name: storage-json
          mountPath: /opt/nifi/nifi-current/json_twitter/
        - name: storage-bootstrap
          mountPath: /opt/nifi/nifi-current/conf/bootstrap.conf
          subPath: bootstrap.conf
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: insight-storage-nifi-claim
      - name: storage-json
        persistentVolumeClaim:
          claimName: insight-storage-nifi-claim-json
      - name: storage-bootstrap
        configMap:
          name: insight-nifi-bootstrap
      - name: storage-conf
        emptyDir: {}      
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: insight-nifi-bootstrap
  namespace: insight
data:
  bootstrap.conf: |
    #
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements.  See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License.  You may obtain a copy of the License at
    #
    #   http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #

    # Java command to use when running NiFi
    java=java

    # Username to use when running NiFi. This value will be ignored on Windows.
    run.as=

    # Configure where NiFi's lib and conf directories live
    lib.dir=./lib
    conf.dir=./conf

    # How long to wait after telling NiFi to shutdown before explicitly killing the Process
    graceful.shutdown.seconds=20

    # Disable JSR 199 so that we can use JSP's without running a JDK
    java.arg.1=-Dorg.apache.jasper.compiler.disablejsr199=true

    # JVM memory settings
    java.arg.2=-Xms512m
    java.arg.3=-Xmx8192m

    # Enable Remote Debugging
    #java.arg.debug=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000

    java.arg.4=-Djava.net.preferIPv4Stack=true

    # allowRestrictedHeaders is required for Cluster/Node communications to work properly
    java.arg.5=-Dsun.net.http.allowRestrictedHeaders=true
    java.arg.6=-Djava.protocol.handler.pkgs=sun.net.www.protocol

    # The G1GC is still considered experimental but has proven to be very advantageous in providing great
    # performance without significant "stop-the-world" delays.
    java.arg.13=-XX:+UseG1GC

    #Set headless mode by default
    java.arg.14=-Djava.awt.headless=true

    # Master key in hexadecimal format for encrypted sensitive configuration values
    nifi.bootstrap.sensitive.key=

    # Sets the provider of SecureRandom to /dev/urandom to prevent blocking on VMs
    java.arg.15=-Djava.security.egd=file:/dev/urandom

    # Requires JAAS to use only the provided JAAS configuration to authenticate a Subject, without using any "fallback" methods (such as prompting for username/password)
    # Please see https://docs.oracle.com/javase/8/docs/technotes/guides/security/jgss/single-signon.html, section "EXCEPTIONS TO THE MODEL"
    java.arg.16=-Djavax.security.auth.useSubjectCredsOnly=true

    ###
    # Notification Services for notifying interested parties when NiFi is stopped, started, dies
    ###

    # XML File that contains the definitions of the notification services
    notification.services.file=./conf/bootstrap-notification-services.xml

    # In the case that we are unable to send a notification for an event, how many times should we retry?
    notification.max.attempts=5

    # Comma-separated list of identifiers that are present in the notification.services.file; which services should be used to notify when NiFi is started?
    #nifi.start.notification.services=email-notification

    # Comma-separated list of identifiers that are present in the notification.services.file; which services should be used to notify when NiFi is stopped?
    #nifi.stop.notification.services=email-notification

    # Comma-separated list of identifiers that are present in the notification.services.file; which services should be used to notify when NiFi dies?
    #nifi.dead.notification.services=email-notification
           
---
apiVersion: v1
kind: Service
metadata:
  name: insight-nifi
  namespace: insight
spec:
  selector:
    app: insight-nifi
  type: NodePort
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  - name: udp 
    port: 10514 
    targetPort: 10514 
