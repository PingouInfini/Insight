import { Injectable } from '@angular/core';
import { HttpResponse } from '@angular/common/http';
import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';
import { JhiPaginationUtil, JhiResolvePagingParams } from 'ng-jhipster';
import { UserRouteAccessService } from 'app/core';
import { of } from 'rxjs';
import { map } from 'rxjs/operators';
import { Vulnerability } from 'app/shared/model/vulnerability.model';
import { VulnerabilityService } from './vulnerability.service';
import { VulnerabilityComponent } from './vulnerability.component';
import { VulnerabilityDetailComponent } from './vulnerability-detail.component';
import { VulnerabilityUpdateComponent } from './vulnerability-update.component';
import { VulnerabilityDeletePopupComponent } from './vulnerability-delete-dialog.component';
import { IVulnerability } from 'app/shared/model/vulnerability.model';

@Injectable({ providedIn: 'root' })
export class VulnerabilityResolve implements Resolve<IVulnerability> {
    constructor(private service: VulnerabilityService) {}

    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {
        const id = route.params['id'] ? route.params['id'] : null;
        if (id) {
            return this.service.find(id).pipe(map((vulnerability: HttpResponse<Vulnerability>) => vulnerability.body));
        }
        return of(new Vulnerability());
    }
}

export const vulnerabilityRoute: Routes = [
    {
        path: 'vulnerability',
        component: VulnerabilityComponent,
        resolve: {
            pagingParams: JhiResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            defaultSort: 'id,asc',
            pageTitle: 'insightApp.vulnerability.home.title'
        },
        canActivate: [UserRouteAccessService]
    },
    {
        path: 'vulnerability/:id/view',
        component: VulnerabilityDetailComponent,
        resolve: {
            vulnerability: VulnerabilityResolve
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'insightApp.vulnerability.home.title'
        },
        canActivate: [UserRouteAccessService]
    },
    {
        path: 'vulnerability/new',
        component: VulnerabilityUpdateComponent,
        resolve: {
            vulnerability: VulnerabilityResolve
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'insightApp.vulnerability.home.title'
        },
        canActivate: [UserRouteAccessService]
    },
    {
        path: 'vulnerability/:id/edit',
        component: VulnerabilityUpdateComponent,
        resolve: {
            vulnerability: VulnerabilityResolve
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'insightApp.vulnerability.home.title'
        },
        canActivate: [UserRouteAccessService]
    }
];

export const vulnerabilityPopupRoute: Routes = [
    {
        path: 'vulnerability/:id/delete',
        component: VulnerabilityDeletePopupComponent,
        resolve: {
            vulnerability: VulnerabilityResolve
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'insightApp.vulnerability.home.title'
        },
        canActivate: [UserRouteAccessService],
        outlet: 'popup'
    }
];
