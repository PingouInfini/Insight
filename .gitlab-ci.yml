image: docker:latest
services:
  - name: 192.168.0.52:9082/docker:dind
    # Don't use $CI_DOCKER_PUSH_REGISTRY in this section
    command: ["--insecure-registry=http://192.168.0.52:9080"]
    
# needs CI_BUILD_USER: registry user, CI_BUILD_TOKEN: registry password for CI_BUILD_USER
variables:
  DOCKER_DRIVER: overlay2
  APP_NAME: insight
  CI_DOCKER_PUBLIC_REGISTRY: registry.hub.docker.com
  CI_DOCKER_PRIVATE_REGISTRY: 192.168.0.52:9082
  CI_DOCKER_PUSH_REGISTRY: 192.168.0.52:9080
  CI_DOCKER_IMAGE: insight
  PRIVATE_CONTAINER_IMAGE: $CI_DOCKER_PUSH_REGISTRY/$CI_DOCKER_IMAGE
  PUBLIC_CONTAINER_IMAGE: $CI_DOCKER_PUBLIC_REGISTRY/$CI_BUILD_USER/$CI_DOCKER_IMAGE
  KUBECTL_VERSION: v1.13.3

stages:
  - build
  - build-docker
  - deploy

maven-build:
  image: $CI_DOCKER_PRIVATE_REGISTRY/magnarox/insight-build
  stage: build
  script: 
    - npm install
    - mvn package -DskipTests -Pprod
  artifacts:
    paths:
      - target/*.war
      - target/*.sh
      - target/Dockerfile

docker-build-private:
  stage: build-docker
  script:
    - docker login -u $CI_BUILD_PRIVATE_USER -p $CI_BUILD_PRIVATE_TOKEN $CI_DOCKER_PUSH_REGISTRY
    - cd target
    - docker build --tag $PRIVATE_CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA --tag $PRIVATE_CONTAINER_IMAGE:latest .
    - docker push $PRIVATE_CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $PRIVATE_CONTAINER_IMAGE:latest
  allow_failure: true

docker-build-public:
  stage: build-docker
  script:
    - docker login -u $CI_BUILD_PUBLIC_USER -p $CI_BUILD_PUBLIC_TOKEN $CI_DOCKER_PUBLIC_REGISTRY
    - cd target
    - docker build --tag $PUBLIC_CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA --tag $PUBLIC_CONTAINER_IMAGE:latest .
    - docker push $PUBLIC_CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $PUBLIC_CONTAINER_IMAGE:latest

kubernetes_deploy:
  stage: deploy
  image: alpine
  script:
    - apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl config set-cluster $KUBE_CLUSTER --server=$KUBE_URL --insecure-skip-tls-verify
    - kubectl config set-context $KUBE_CONTEXT --cluster=$KUBE_CLUSTER
    - kubectl config set-credentials $KUBE_USER --token=$KUBE_TOKEN
    - kubectl config set-context $KUBE_CONTEXT --user=$KUBE_USER
    - kubectl config use-context $KUBE_CONTEXT
    - kubectl set image deployment/insight insight-app=$CI_BUILD_PUBLIC_USER/$CI_DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA --namespace=insight
